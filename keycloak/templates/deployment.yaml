---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      configmap.fabric8.io/update-on-change: {{ template "name" . }}
      fabric8.io/target-platform: kubernetes
    labels:
      app: {{ template "name" . }}
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      release: {{ .Release.Name | quote }}
      heritage: {{ .Release.Service | quote }}
    name: {{ template "name" . }}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: {{ template "name" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          pod.beta.kubernetes.io/init-containers: |-
            [
            {
              "name": "envvar-substitution",
              "image": "fabric8/envsubst-file:1.0.0",
              "imagePullPolicy": "IfNotPresent",
              "args": [
                "fabric8-realm.json"
              ],
              "env": [{
                "name": "AUTH_URL",
                "valueFrom": {
                        "configMapKeyRef": {
                            "name": "keycloak",
                            "key": "auth.api.url"
                        }
                    }
              },
              {
                "name": "JENKINS_URL",
                "valueFrom": {
                        "configMapKeyRef": {
                            "name": "keycloak",
                            "key": "jenkins.url"
                        }
                    }
              },
              {
                "name": "KEYCLOAK_URL",
                "valueFrom": {
                        "configMapKeyRef": {
                            "name": "keycloak",
                            "key": "keycloak.url"
                        }
                    }
              },
              {
                "name": "KEYCLOAK_PRIVATEKEY",
                "valueFrom": {
                        "secretKeyRef": {
                            "name": "keycloak",
                            "key": "kc.private.key"
                        }
                    }
              },
              {
                "name": "KEYCLOAK_PUBLICKEY",
                "valueFrom": {
                        "secretKeyRef": {
                            "name": "keycloak",
                            "key": "kc.public.key"
                        }
                    }
              },
              {
                "name": "KEYCLOAK_CLIENTID_SECRET",
                "valueFrom": {
                        "secretKeyRef": {
                            "name": "keycloak",
                            "key": "kc.clientid.secret"
                        }
                    }
              },
              {
                "name": "K8S_API_SERVER",
                "valueFrom": {
                        "configMapKeyRef": {
                            "name": "keycloak",
                            "key": "apiserver.url"
                        }
                    }
              },
              {
                "name": "HIDE_OPENSHIFT_BTN",
                "value": "true"
              },
              {
                "name": "HIDE_GITHUB_BTN",
                "value": "false"
              }],
              "volumeMounts": [
              {
                "name": "keycloak-config",
                "mountPath": "/workdir/fabric8-realm.json",
                "subPath": "config/fabric8-realm.json"
              },
              {
                "name": "keycloak-subst-config",
                "mountPath": "/processed"
              }
              ]
            },
            {
                "name": "init-dependencyservice",
                "image": "fabric8/fabric8-dependency-wait-service:v6632df1",
                "imagePullPolicy": "IfNotPresent",
                "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 postgres://keycloak@keycloak-db:5432"],
                "env": [{
                  "name": "DEPENDENCY_POLL_INTERVAL",
                  "value": "1"
                }, {
                  "name": "DEPENDENCY_LOG_VERBOSE",
                  "value": "true"
                }]
            }]
          configmap.fabric8.io/update-on-change: {{ template "name" . }}
          fabric8.io/target-platform: kubernetes
        labels:
          app: {{ template "name" . }}
          chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        containers:
        - args:
          - -b $(INTERNAL_POD_IP)
          - -Djgroups.bind_addr=global
          - -Djboss.node.name=$(INTERNAL_POD_IP)
          - -Dkeycloak.migration.action=import
          - -Dkeycloak.migration.provider=dir
          - -Dkeycloak.migration.dir=/opt/jboss/keycloak/standalone/configuration/import/
          - -Dkeycloak.migration.strategy=IGNORE_EXISTING
          env:
          - name: POSTGRES_HOSTNAME
            value: keycloak-db
          - name: POSTGRES_USER
            value: keycloak
          - name: POSTGRES_PASSWORD
            value: keycloak
          - name: OPERATING_MODE
            value: standalone
          - name: POSTGRES_PORT_5432_TCP_ADDR
            value: keycloak-db
          - name: INTERNAL_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                key: kc.user
                name: keycloak
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                key: kc.password
                name: keycloak
          - name: KEYCLOAK_CLIENTID_SECRET
            valueFrom:
              secretKeyRef:
                key: kc.clientid.secret
                name: keycloak
          - name: KEYCLOAK_PRIVATEKEY
            valueFrom:
              secretKeyRef:
                key: kc.private.key
                name: keycloak
          - name: KEYCLOAK_PUBLICKEY
            valueFrom:
              secretKeyRef:
                key: kc.public.key
                name: keycloak
          - name: HIDE_OPENSHIFT_BTN
            value: "true"
          - name: HIDE_GITHUB_BTN
            value: "false"
          image: "{{ .Values.keycloak.dbImage.name }}:{{ .Values.keycloak.dbImage.tag }}"
          imagePullPolicy: {{ .Values.keycloak.dbImage.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 180
            timeoutSeconds: 60
          name: keycloak
          readinessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 180
            timeoutSeconds: 60
          volumeMounts:
          - mountPath: /opt/jboss/keycloak/standalone/configuration/import
            name: keycloak-subst-config
          - mountPath: /opt/jboss/keycloak/themes/fabric8
            name: keycloak-theme
        volumes:
        - emptyDir: {}
          name: keycloak-subst-config
        - configMap:
            items:
            - key: fabric8-realm.json
              path: config/fabric8-realm.json
            name: keycloak
          name: keycloak-config
        - gitRepo:
            directory: login
            repository: https://github.com/fabric8io/fabric8-keycloak-theme.git
            revision: 61b08f0a2f4be2395bb0bbb6d16a8538f4f2b836
          name: keycloak-theme
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: {{ template "name" . }}-db
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      release: {{ .Release.Name | quote }}
      heritage: {{ .Release.Service | quote }}
    name: {{ template "name" . }}-db
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: {{ template "name" . }}-db
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name | quote }}
        heritage: {{ .Release.Service | quote }}
    template:
      metadata:
        annotations:
          pod.alpha.kubernetes.io/init-containers: '[{"image":"busybox","imagePullPolicy":"IfNotPresent","name":"fmp-volume-permission","command":["chmod","777","/var/lib/pgsql/data"],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"keycloak-db-postgresql-data"}]}]'
        labels:
          app: {{ template "name" . }}-db
          chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: keycloak
          - name: POSTGRESQL_PASSWORD
            value: keycloak
          - name: POSTGRESQL_USER
            value: keycloak
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          image: "{{ .Values.keycloak.image.name }}:{{ .Values.keycloak.image.tag }}"
          imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            timeoutSeconds: 5
          name: keycloak-db
          ports:
          - containerPort: 5432
            name: postgresql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: keycloak-db-postgresql-data
            readOnly: false
        volumes:
        - name: keycloak-db-postgresql-data
          emptyDir: {}